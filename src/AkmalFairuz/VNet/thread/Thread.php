<?php

declare(strict_types=1);

namespace AkmalFairuz\VNet\thread;

use AkmalFairuz\VNet\Autoload;

abstract class Thread extends \Thread{

    public bool $isKilled = false;

    private string $autoloadPath;

    private bool $running = false;

    public function start(int $options = PTHREADS_INHERIT_ALL){
        ThreadManager::getInstance()->add($this);

        $this->autoloadPath = VNET_AUTOLOAD_PATH;

        parent::start($options); // TODO: Change the autogenerated stub
    }

    public function waitUntilRun() {
        while(!$this->running) {
            usleep(1000);
        }
    }

    public function run(){
        $this->running = true;

        require_once $this->autoloadPath;
        $autoload = new Autoload();
        $autoload->register();

        $this->onRun();
    }

    abstract public function onRun() : void;

    public function quit() {
        $this->isKilled = true;

        if(!$this->isJoined()){
            $this->notify();
            $this->join();
        }

        ThreadManager::getInstance()->remove($this);
    }
}